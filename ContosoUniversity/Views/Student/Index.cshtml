@model PagedList.IPagedList<ContosoUniversity.Core.Models.Student>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Students";
}

<h2>Students</h2>

<p>
    <a href="@Url.Action("Create")">
        Create New
        <span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span>
    </a>
</p>
@using (Html.BeginForm("Index", "Student", FormMethod.Get))
{

    <div class="form-group">
        <div class="form-inline">
            @Html.TextBox("SearchValue", ViewBag.CurrentFilter as string, new {@class = "form-control", placeholder="Find by Name"})

            <button type="submit" value="Search" class="btn btn-default">
                <span class="glyphicon glyphicon-search"></span>
            </button>
        </div>
    </div>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.LastNameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("First Name", "Index", new{sortOrder = ViewBag.FirstNameSortParm, currentFilter = ViewBag.CurrentFilter})
        </th>
        <th>
            @Html.ActionLink("Enrollment Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        var student = item;
        <tr>
            <td>
                @Html.DisplayFor(modelItem => student.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => student.FirstMidName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => student.EnrollmentDate)
            </td>
            <td>
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Edit", "Edit", new {id = item.Id}) |
                @Html.ActionLink("Delete", "Delete", new {id = item.Id})
            </td>
        </tr>
    }

</table>
<br />
 Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
